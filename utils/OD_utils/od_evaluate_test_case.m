function [output, cov] = od_evaluate_test_case(...
    model,...
    test_case,...
    input_types,...
    sim_time,...
    samp_time...
)
    
    n_input_vars = size(test_case.dataValues, 1);
    step_time = (0:samp_time:sim_time)';
    
    for i = 1:n_input_vars
        signal(i) = Fn_MiLTester_CreateCustomStepSignal_SLDV(...
            test_case.dataValues{i},...
            test_case.timeValues,...
            sim_time,...
            samp_time...
        );
    
        inp_signal(:,i) = signal(i).values;
    end
    
    % report error if inp_signal is impty
    assert(~isempty(inp_signal));
    
    if strcmp(model, 'Tiny')
        [output, ~, cov] = simulate_Tiny(model, inp_signal, step_time, sim_time);
    elseif strcmp(model, 'CC')
        [output, ~, cov] = simulate_CC(model, inp_signal, step_time, sim_time);
    elseif strcmp(model, 'CW')
        [output, ~, cov] = simulate_CW(model, inp_signal, step_time, sim_time);
    elseif strcmp(model, 'clc_sldv')
        [output, ~, cov] = simulate_CLC(model, inp_signal, step_time, sim_time);
    end
end